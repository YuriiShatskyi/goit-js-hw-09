{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,gBAC9BE,KAAMH,SAASC,cAAc,eAC7BG,OAAQJ,SAASC,cAAc,kBA8BjC,SAASI,EAAcC,EAAUJ,GAC/B,OAAO,IAAIK,SAAQ,SAACC,EAASC,GAE7B,IAAMC,EAAgBC,KAAKC,SAAW,GAEpCC,YAAW,WACPH,EAEFF,EAAQ,CAACF,WAAUJ,UAInBO,EAAO,CAACH,WAAUJ,S,GAGnBA,E,IA1CLJ,EAAKC,KAAKe,iBAAiB,UAE3B,SAAmBC,GACjBA,EAAMC,iBAIN,IAFA,IAA8BC,EAevB,CACNf,MAAOgB,OAAOpB,EAAKI,MAAMiB,OACxBhB,KAAMe,OAAOpB,EAAKK,KAAKgB,OACvBf,OAAQc,OAAOpB,EAAKM,OAAOe,QAlBvBC,EAAwBH,EAAxBf,MAAOC,EAAiBc,EAAjBd,KAAMC,EAAWa,EAAXb,OAEViB,EAAW,EAAGA,GAAYjB,EAAQiB,GAAY,EACrDhB,EAAcgB,EAAUD,GACrBE,MAAK,SAAAC,G,IAAGjB,EAAQiB,EAARjB,SAAUJ,EAAKqB,EAALrB,MACjBsB,EAAA5B,GAAS6B,OAAOC,QAAQ,uBAAwCC,OAAfrB,EAAS,QAAYqB,OAANzB,EAAM,M,IAEvE0B,OAAM,SAAAL,G,IAAGjB,EAAQiB,EAARjB,SAAUJ,EAAKqB,EAALrB,MAClBsB,EAAA5B,GAAS6B,OAAOI,QAAQ,sBAAqCF,OAAfrB,EAAS,QAAYqB,OAANzB,EAAM,M,IAEvEkB,GAASjB,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('[name=delay]'),\n  step: document.querySelector('[name=step]'),\n  amount: document.querySelector('[name=amount]'),\n}\n\nrefs.form.addEventListener('submit', onSubmit);\n\nfunction onSubmit (event) {\n  event.preventDefault();\n\n  let { delay, step, amount } = getValue();\n\n  for (let position = 1; position <= amount; position += 1) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += step;\n  } \n}\n\nfunction getValue() {\n  return { \n   delay: Number(refs.delay.value),\n    step: Number(refs.step.value),\n    amount: Number(refs.amount.value),\n }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n  \n  const shouldResolve = Math.random() > 0.3;\n  \n    setTimeout(() => {\n    if (shouldResolve) {\n      \n      resolve({position, delay});\n      // Fulfill\n    } else {\n      \n      reject({position, delay});\n        // Reject\n  }\n  }, delay) \n  })\n}\n\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","delay","step","amount","$ce04d3a99e08e73b$var$createPromise","position","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","ref","Number","value","delay1","position1","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.c662134c.js.map"}